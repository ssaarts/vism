<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ea381e31-c667-4076-a219-f34c6c09d2a4" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vism.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/config.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/modules/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/modules/openssl/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/modules/openssl/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/modules/openssl/db.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/modules/openssl/errors.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/modules/openssl/openssl.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/modules/openssl/templates/openssl.conf.j2" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/setup.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/config.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/crypto/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/crypto/aes256.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/crypto/crypto.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/db/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/db/database.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/util/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/util/errors.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/util/linux_lib.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/util/util.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/x509/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vism_ca/x509/certificate.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RIK/x509/roles/acme/files/acme/http01.py" beforeDir="false" afterPath="$PROJECT_DIR$/RIK/x509/roles/acme/files/acme/http01.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RIK/x509/roles/acme/files/acme/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/RIK/x509/roles/acme/files/acme/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RIK/x509/roles/acme/files/acme/structs/nonce.py" beforeDir="false" afterPath="$PROJECT_DIR$/RIK/x509/roles/acme/files/acme/structs/nonce.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RIK/x509/roles/certbot/tasks/install-RedHat-9.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/RIK/x509/roles/certbot/tasks/install-RedHat-9.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RIK/x509/roles/certbot/tasks/issue.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/RIK/x509/roles/certbot/tasks/issue.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RIK/x509/roles/certbot/tasks/main.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/RIK/x509/roles/certbot/tasks/main.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RIK/x509/roles/openssl_ca/templates/etc/base_ca_cert.conf.j2" beforeDir="false" afterPath="$PROJECT_DIR$/RIK/x509/roles/openssl_ca/templates/etc/base_ca_cert.conf.j2" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="33vYi1TIyCKLF5YORK79ZrwZZk7" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.docker-compose.yaml: Compose Deployment (2).executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;Python.linux_lib.executor&quot;: &quot;Run&quot;,
    &quot;Python.scratch_1.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager.252&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHELLCHECK.PATH&quot;: &quot;/home/ssaart/.local/share/JetBrains/PyCharmCE2025.2/Shell Script/shellcheck&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/ssaart/Work/Projects/vism/src/crypto&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/crypto" />
      <recent name="$PROJECT_DIR$/src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/uril" />
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/util" />
      <recent name="$PROJECT_DIR$/modules/openssl" />
      <recent name="$PROJECT_DIR$/crypto" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yaml: Compose Deployment">
    <configuration name="linux_lib" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="vism" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/util" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/uril/linux_lib.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment (1)" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment (2)" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.postgres: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment (2)" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment (1)" />
        <item itemvalue="Docker.docker-compose.yaml.postgres: Compose Deployment" />
        <item itemvalue="Python.linux_lib" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-3aa1da707db6-JavaScript-PY-252.26830.99" />
        <option value="bundled-python-sdk-164cda30dcd9-0af03a5fa574-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-252.26830.99" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ea381e31-c667-4076-a219-f34c6c09d2a4" name="Changes" comment="" />
      <created>1760199136098</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1760199136098</updated>
      <workItem from="1760433703980" duration="13247000" />
      <workItem from="1760463342807" duration="892000" />
      <workItem from="1760464244469" duration="2105000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>